import{j as e,aO as I,r as d,aP as s,aQ as T,b as h,ag as l,U as u,a as c,I as A,d as G,c as p,P as x,e as F,f as W,g as S,h as g,R as z}from"./index-3z78uuqb.js";import{F as a}from"./FormControl-4liSbOnV.js";import{C as w}from"./ReactSyntaxHighlighter-YeCXE01n.js";import"./index-b1Kgp3Ul.js";const j=({children:t,component:n,margin:i,sx:o,variant:v,...m})=>e.jsx(I,{component:n,margin:i,sx:o,variant:v,...m,children:t}),r=({children:t,fullWidth:n,labelId:i,id:o,value:v,label:m,onChange:f,options:b,variant:O,autowidth:C,size:y,...B})=>e.jsxs(d.Fragment,{children:[e.jsx(s,{children:m}),e.jsx(T,{labelId:i,children:t,fullWidth:n,id:o,value:v,label:m,onChange:f,options:b,props:B,variant:O,autowidth:C,size:y,children:t})]}),k=`import React, { useState } from "react";
import * as SolarIconSet from "solar-icon-set";
import { FormControl, Select } from "nms-creative-ui";

const AutoWidth = () => {
  const [selectedOption, setSelectedOption] = useState(1);

  const list = [
    {
      icon: <SolarIconSet.Buildings size={24} iconStyle="BoldDuotone" />,
      label: "Option 1",
      value: 1,
    },
    {
      icon: <SolarIconSet.Buildings size={24} iconStyle="BoldDuotone" />,
      label: "Option 2",
      value: 2,
    },
    {
      icon: <SolarIconSet.Buildings size={24} iconStyle="BoldDuotone" />,
      label: "Option 3",
      value: 3,
    },
  ];

  return (
    <FormControl fullWidth>
      <Select
        autowidth
        label="Select"
        options={list}
        value={selectedOption}
        onChange={(event) => setSelectedOption(event.target.value)}
        startAdornment={
          selectedOption &&
          list.find((item) => item.value === selectedOption).icon
        }
      />
    </FormControl>
  );
};

export default AutoWidth;`,D=`import React, { useState } from "react";
import { FormControl, Grid, Select } from "nms-creative-ui";
import * as SolarIconSet from "solar-icon-set";

const Basic = () => {
  const [selectedOption, setSelectedOption] = useState(null);

  const list = [
    {
      icon: <SolarIconSet.Buildings size={24} iconStyle="BoldDuotone" />,
      label: "Option 1",
      value: 1,
    },
    {
      icon: <SolarIconSet.Buildings size={24} iconStyle="BoldDuotone" />,
      label: "Option 2",
      value: 2,
    },
    {
      icon: <SolarIconSet.Buildings size={24} iconStyle="BoldDuotone" />,
      label: "Option 3",
      value: 3,
    },
  ];

  return (
    <Grid container spacing={2} justifyContent="center" alignItems="center">
      <Grid item desktop={6}>
        <FormControl fullWidth>
          <Select
            fullWidth
            label="Select"
            options={list}
            value={selectedOption}
            onChange={(event) => setSelectedOption(event.target.value)}
            startAdornment={
              selectedOption &&
              list.find((item) => item.value === selectedOption).icon
            }
          />
        </FormControl>
      </Grid>
      <Grid item desktop={6}>
        <FormControl fullWidth>
          <Select
            fullWidth
            label="Select"
            options={list}
            value={selectedOption}
            onChange={(event) => setSelectedOption(event.target.value)}
            startAdornment={
              selectedOption &&
              list.find((item) => item.value === selectedOption).icon
            }
          />
        </FormControl>
      </Grid>
    </Grid>
  );
};

export default Basic;`,_=`import React, { useState } from "react";
import { FormControl, Grid, Select } from "nms-creative-ui";
import * as SolarIconSet from "solar-icon-set";

const Filled = () => {
  const [selectedOption, setSelectedOption] = useState(null);

  const list = [
    {
      icon: <SolarIconSet.Buildings size={24} iconStyle="BoldDuotone" />,
      label: "Option 1",
      value: 1,
    },
    {
      icon: <SolarIconSet.Buildings size={24} iconStyle="BoldDuotone" />,
      label: "Option 2",
      value: 2,
    },
    {
      icon: <SolarIconSet.Buildings size={24} iconStyle="BoldDuotone" />,
      label: "Option 3",
      value: 3,
    },
  ];

  return (
    <Grid container spacing={2} justifyContent="center" alignItems="center">
      <Grid item desktop={6}>
        <FormControl fullWidth>
          <Select
            fullWidth
            label="Select"
            variant="filled"
            options={list}
            value={selectedOption}
            onChange={(event) => setSelectedOption(event.target.value)}
            startAdornment={
              selectedOption &&
              list.find((item) => item.value === selectedOption).icon
            }
          />
        </FormControl>
      </Grid>
      <Grid item desktop={6}>
        <FormControl fullWidth>
          <Select
            fullWidth
            label="Select"
            variant="filled"
            options={list}
            value={selectedOption}
            onChange={(event) => setSelectedOption(event.target.value)}
            startAdornment={
              selectedOption &&
              list.find((item) => item.value === selectedOption).icon
            }
          />
        </FormControl>
      </Grid>
    </Grid>
  );
};

export default Filled;`,H=`import React, { useState } from "react";
import {
  FormControl,
  FormHelperText,
  Grid,
  Select,
} from "nms-creative-ui";
import * as SolarIconSet from "solar-icon-set";

const LabelandHelperText = () => {
  const [selectedOption, setSelectedOption] = useState(null);

  const list = [
    {
      icon: <SolarIconSet.Buildings size={24} iconStyle="BoldDuotone" />,
      label: "Option 1",
      value: 1,
    },
    {
      icon: <SolarIconSet.Buildings size={24} iconStyle="BoldDuotone" />,
      label: "Option 2",
      value: 2,
    },
    {
      icon: <SolarIconSet.Buildings size={24} iconStyle="BoldDuotone" />,
      label: "Option 3",
      value: 3,
    },
  ];

  return (
    <Grid container spacing={2} justifyContent="center" alignItems="center">
      <Grid item desktop={6}>
        <FormControl fullWidth>
          <Select
            fullWidth
            label="Select"
            variant="outlined"
            options={list}
            value={selectedOption}
            onChange={(event) => setSelectedOption(event.target.value)}
            startAdornment={
              selectedOption &&
              list.find((item) => item.value === selectedOption).icon
            }
          />
          <FormHelperText>With label + Hypertext</FormHelperText>
        </FormControl>
      </Grid>
      <Grid item desktop={6}>
        <FormControl fullWidth>
          <Select
            fullWidth
            label="hehe"
            variant="outlined"
            options={list}
            value={selectedOption}
            onChange={(event) => setSelectedOption(event.target.value)}
            startAdornment={
              selectedOption &&
              list.find((item) => item.value === selectedOption).icon
            }
          />
          <FormHelperText>Without Label</FormHelperText>
        </FormControl>
      </Grid>
    </Grid>
  );
};

export default LabelandHelperText;`,E=`import React, { useState } from "react";
import { Grid, Select } from "nms-creative-ui";
import * as SolarIconSet from "solar-icon-set";

const Sizes = () => {
  const [selectedOption, setSelectedOption] = useState(1);

  const list = [
    {
      icon: <SolarIconSet.Buildings size={24} iconStyle="BoldDuotone" />,
      label: "Option 1",
      value: 1,
    },
    {
      icon: <SolarIconSet.Buildings size={24} iconStyle="BoldDuotone" />,
      label: "Option 2",
      value: 2,
    },
    {
      icon: <SolarIconSet.Buildings size={24} iconStyle="BoldDuotone" />,
      label: "Option 3",
      value: 3,
    },
  ];

  return (
    <Grid container spacing={2} justifyContent="center" alignItems="center">
      <Grid item desktop={4}>
        <Select
          fullWidth
          size="small"
          label="Select"
          options={list}
          value={selectedOption}
          onChange={(event) => setSelectedOption(event.target.value)}
          startAdornment={
            selectedOption &&
            list.find((item) => item.value === selectedOption).icon
          }
        />
      </Grid>
      <Grid item desktop={4}>
        <Select
          fullWidth
          size="medium"
          label="Select"
          options={list}
          value={selectedOption}
          onChange={(event) => setSelectedOption(event.target.value)}
          startAdornment={
            selectedOption &&
            list.find((item) => item.value === selectedOption).icon
          }
        />
      </Grid>
      <Grid item desktop={4}>
        <Select
          fullWidth
          size="large"
          label="Select"
          options={list}
          value={selectedOption}
          onChange={(event) => setSelectedOption(event.target.value)}
          startAdornment={
            selectedOption &&
            list.find((item) => item.value === selectedOption).icon
          }
        />
      </Grid>
    </Grid>
  );
};

export default Sizes;`,R=`import React, { useState } from "react";
import { Grid, Select } from "nms-creative-ui";
import * as SolarIconSet from "solar-icon-set";

const Standard = () => {
  const [selectedOption, setSelectedOption] = useState(null);

  const list = [
    {
      icon: <SolarIconSet.Buildings size={24} iconStyle="BoldDuotone" />,
      label: "Option 1",
      value: 1,
    },
    {
      icon: <SolarIconSet.Buildings size={24} iconStyle="BoldDuotone" />,
      label: "Option 2",
      value: 2,
    },
    {
      icon: <SolarIconSet.Buildings size={24} iconStyle="BoldDuotone" />,
      label: "Option 3",
      value: 3,
    },
  ];

  return (
    <Grid container spacing={2} justifyContent="center" alignItems="center">
      <Grid item desktop={6}>
        <Select
          fullWidth
          label="Select"
          variant="standard"
          options={list}
          value={selectedOption}
          onChange={(event) => setSelectedOption(event.target.value)}
          startAdornment={
            selectedOption &&
            list.find((item) => item.value === selectedOption).icon
          }
        />
      </Grid>
      <Grid item desktop={6}>
        <Select
          fullWidth
          label="Select"
          variant="standard"
          options={list}
          value={selectedOption}
          onChange={(event) => setSelectedOption(event.target.value)}
          startAdornment={
            selectedOption &&
            list.find((item) => item.value === selectedOption).icon
          }
        />
      </Grid>
    </Grid>
  );
};

export default Standard;`,L=()=>{d.useState(1);const t=n=>{setAge(n.target.value)};return e.jsx(h,{sx:{display:"flex",justifyContent:"center",width:"100%"},children:e.jsxs(a,{children:[e.jsx(s,{id:"demo-simple-select-autowidth-label",children:"Age"}),e.jsxs(r,{labelId:"demo-simple-select-autowidth-label",id:"demo-simple-select-autowidth",onChange:t,autoWidth:!0,label:"Age",children:[e.jsx(l,{value:10,children:"Twenty"}),e.jsx(l,{value:21,children:"Twenty one"}),e.jsx(l,{value:22,children:"Twenty one and a half"})]})]})})},P=()=>{const[t,n]=d.useState(""),i=o=>{n(o.target.value)};return e.jsx(h,{sx:{display:"flex",justifyContent:"center",width:"100%"},children:e.jsxs(a,{sx:{width:300},children:[e.jsx(s,{id:"demo-simple-select-label",children:"Age"}),e.jsxs(r,{labelId:"demo-simple-select-label",id:"demo-simple-select",value:t,label:"Age",onChange:i,children:[e.jsx(l,{value:10,children:"Ten"}),e.jsx(l,{value:20,children:"Twenty"}),e.jsx(l,{value:30,children:"Thirty"})]})]})})};function M(){const[t,n]=d.useState(""),i=o=>{n(o.target.value)};return e.jsx(h,{sx:{display:"flex",justifyContent:"center",width:"100%"},children:e.jsxs(a,{sx:{width:300},children:[e.jsx(s,{id:"demo-simple-select-label",children:"Age"}),e.jsxs(r,{labelId:"demo-simple-select-label",id:"demo-simple-select",value:t,label:"Age",onChange:i,variant:"filled",children:[e.jsx(l,{value:10,children:"Ten"}),e.jsx(l,{value:20,children:"Twenty"}),e.jsx(l,{value:30,children:"Thirty"})]})]})})}const N=()=>{const[t,n]=d.useState(""),i=o=>{n(o.target.value)};return e.jsxs(u,{container:!0,spacing:2,children:[e.jsx(u,{item:!0,desktop:6,children:e.jsxs(a,{fullWidth:!0,children:[e.jsx(s,{id:"demo-simple-select-label",children:"Age"}),e.jsxs(r,{labelId:"demo-simple-select-label",id:"demo-simple-select",value:t,label:"Age",onChange:i,children:[e.jsx(l,{value:10,children:"Ten"}),e.jsx(l,{value:20,children:"Twenty"}),e.jsx(l,{value:30,children:"Thirty"})]}),e.jsx(j,{children:"With label + Hypertext"})]})}),e.jsx(u,{item:!0,desktop:6,children:e.jsxs(a,{fullWidth:!0,children:[e.jsxs(r,{labelId:"demo-simple-select-label",id:"demo-simple-select",value:t,onChange:i,children:[e.jsx(l,{value:10,children:"Ten"}),e.jsx(l,{value:20,children:"Twenty"}),e.jsx(l,{value:30,children:"Thirty"})]}),e.jsx(j,{children:"Without label"})]})})]})},U=()=>{d.useState(1);const t=n=>{setAge(n.target.value)};return e.jsxs(u,{container:!0,spacing:4,children:[e.jsx(u,{item:!0,desktop:4,children:e.jsxs(a,{fullWidth:!0,children:[e.jsx(s,{id:"demo-select-small-label",children:"Age"}),e.jsxs(r,{labelId:"demo-select-small-label",id:"demo-select-small",label:"Age",size:"small",onChange:t,children:[e.jsx(l,{value:10,children:"Ten"}),e.jsx(l,{value:20,children:"Twenty"}),e.jsx(l,{value:30,children:"Thirty"})]})]})}),e.jsx(u,{item:!0,desktop:4,children:e.jsxs(a,{fullWidth:!0,children:[e.jsx(s,{id:"demo-select-small-label",children:"Age"}),e.jsxs(r,{labelId:"demo-select-small-label",id:"demo-select-small",label:"Age",size:"medium",onChange:t,children:[e.jsx(l,{value:10,children:"Ten"}),e.jsx(l,{value:20,children:"Twenty"}),e.jsx(l,{value:30,children:"Thirty"})]})]})}),e.jsx(u,{item:!0,desktop:4,children:e.jsxs(a,{fullWidth:!0,children:[e.jsx(s,{id:"demo-select-small-label",children:"Age"}),e.jsxs(r,{labelId:"demo-select-small-label",id:"demo-select-small",label:"Age",size:"large",onChange:t,children:[e.jsx(l,{value:10,children:"Ten"}),e.jsx(l,{value:20,children:"Twenty"}),e.jsx(l,{value:30,children:"Thirty"})]})]})})]})},q=()=>{const[t,n]=d.useState(""),i=o=>{n(o.target.value)};return e.jsx(h,{sx:{display:"flex",justifyContent:"center",width:"100%"},children:e.jsxs(a,{sx:{width:300},children:[e.jsx(s,{id:"demo-simple-select-label",children:"Age"}),e.jsxs(r,{labelId:"demo-simple-select-label",id:"demo-simple-select",value:t,label:"Age",onChange:i,variant:"standard",children:[e.jsx(l,{value:10,children:"Ten"}),e.jsx(l,{value:20,children:"Twenty"}),e.jsx(l,{value:30,children:"Thirty"})]})]})})},J=[{id:1,name:"Basic",first_value:"1",second_value:"2",component:P,exampleComponent:D},{id:2,name:"Filled",first_value:"1",second_value:"2",component:M,exampleComponent:_},{id:3,name:"Standard",first_value:"1",second_value:"2",component:q,exampleComponent:R},{id:4,name:"Label and Helper Text",first_value:"1",second_value:"2",component:N,exampleComponent:H},{id:5,name:"AutoWidth",first_value:"1",second_value:"2",component:L,exampleComponent:k},{id:6,name:"Sizes",first_value:"1",second_value:"2",component:U,exampleComponent:E}],Q=({item:t})=>{const[n,i]=d.useState(t.first_value),o=(v,m)=>{i(m)};return e.jsx(d.Fragment,{children:e.jsx(x,{elevation:4,children:e.jsxs(F,{value:n,children:[e.jsx(p,{variant:"h4",sx:{marginBottom:3},children:t.name}),e.jsxs(W,{onChange:o,"aria-label":"lab API tabs example",children:[e.jsx(S,{label:"Preview",value:t.first_value}),e.jsx(S,{label:"JSX",value:t.second_value})]}),e.jsx(g,{value:t.first_value,children:e.jsx(x,{style:{justifyContent:"center",borderRadius:"20px",border:"1px dashed #919EAB40",backgroundColor:"#FBFBFC",padding:"24px",boxShadow:"none"},children:e.jsx(c,{direction:"row",spacing:4,children:z.createElement(t.component)})})}),e.jsx(g,{value:t.second_value,children:e.jsx(w,{code:t.exampleComponent,language:"jsx"})})]})})})},Z=()=>e.jsxs(c,{spacing:6,children:[e.jsx(h,{children:e.jsxs(c,{direction:"column",spacing:3,children:[e.jsxs(c,{direction:"row",spacing:1,children:[e.jsx(A,{color:"secondary",children:e.jsx(G.Download,{size:24,iconStyle:"BoldDuotone"})}),e.jsx(p,{variant:"body1",children:"Inputs"})]}),e.jsxs(c,{direction:"column",spacing:1,children:[e.jsx(p,{variant:"h2",children:"Select"}),e.jsx(p,{variant:"body1",children:"Lorem ipsum dolor sit amet consectetur. Urna dictum pulvinar a orci eu nunc diam in neque."})]}),e.jsx(c,{direction:"column",spacing:1,children:e.jsx("a",{href:"https://mui.com/material-ui/react-select/",target:"_blank",children:e.jsx(p,{children:"https://mui.com/material-ui/react-select/"})})})]})}),e.jsx(c,{direction:"column",spacing:6,children:J.map((t,n)=>e.jsx(Q,{item:t},n))})]});export{Z as default};
