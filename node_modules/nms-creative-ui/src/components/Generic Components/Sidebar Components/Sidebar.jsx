import * as React from 'react';
import * as SolarIconSet from "solar-icon-set";
import { CustDrawer } from "../General Components/CustDrawer";
import SideBarNavHelpers from "./SideBarNavHelpers";
import { Drawer, styled } from '@mui/material';
import CssBaseline from '@mui/material/CssBaseline';
import { Fragment } from 'react';
import IconButton from '@mui/material/IconButton';
import Icon from '../../Foundation/Icon';
import Box from '../../Layout/Box';

const drawerWidth = 248;

const DrawerHeader = styled("div")(({ theme }) => ({
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  padding: theme.spacing(0, 1),
  ...theme.mixins.toolbar,
}));

const SideBar = ({ window, mobileOpen, handleDrawerClose, handleDrawerTransitionEnd , darkMode}) => {
  const [open, setOpen] = React.useState(true);

  const handleDrawerOpen = () => {
    setOpen(true);
  };

  const handleDrawerSideClose = () => {
    setOpen(false);
  };
  const container =
    window !== undefined ? () => window().document.body : undefined;

  return (
    <Fragment>
      <Box>
        <CssBaseline />
        {/* MOBILE DRAWER */}
        <Drawer
          container={container}
          variant="temporary"
          open={mobileOpen}
          onTransitionEnd={handleDrawerTransitionEnd}
          onClose={handleDrawerClose}
          ModalProps={{
            keepMounted: true, // Better open performance on mobile.
          }}
          sx={{
            // borderRadius: darkMode ? "0px" : "0px",
            '& .MuiDrawer-paper': { boxSizing: 'border-box', borderRadius:"0px", padding:"0px", maxHeight: '100%', overflowY: 'auto' },
            display: { mobile: 'block', laptop: 'none' }, // Hide for tablet and larger screens
          }}
        >
          <SideBarNavHelpers open={open} />
        </Drawer>

        {/* DESKTOP DRAWER */}
        <CustDrawer
          variant="permanent"
          open={open}
          sx={{
            borderRadius:"0px",
            display: {  mobile: "none", tablet: "none", laptop: "block" ,desktop: "block"},
          }}
        >
          {/* CLOSE OPEN SIDEBAR */}
          <DrawerHeader>
            {open && (
              <IconButton
                onClick={handleDrawerSideClose}
                sx={{
                  display: "block",
                  left: 227,
                  top: 85,
                  zIndex: 999,
                  position: "fixed",
                }}
              >
                <Icon
                  color="secondary"
                  sx={{
                    display: "flex",
                    alignItems: "center",
                    borderRadius: "50%",
                    border: "1px dashed #919EAB40",
                  }}
                >
                  <SolarIconSet.AltArrowLeft size={22} iconStyle="Outline" />
                </Icon>
              </IconButton>
            )}

            {!open && (
              <IconButton
                onClick={handleDrawerOpen}
                sx={{
                  display: "block",
                  alignItems: "center",
                  left: 92,
                  top: 70,
                  position: "fixed",
                  zIndex: 999,
                }}
              >
                <Icon
                  color="secondary"
                  sx={{
                    display: "flex",
                    alignItems: "center",
                    borderRadius: "50%",
                    border: "1px dashed #919EAB40",
                  }}
                >
                  <SolarIconSet.AltArrowRight size={22} iconStyle="Outline" />
                </Icon>
              </IconButton>
            )}
          </DrawerHeader>

          <SideBarNavHelpers open={open} handleDrawerOpen={handleDrawerOpen} />
        </CustDrawer>
      </Box>
    </Fragment>
  );
};

export default SideBar;
