import * as React from 'react';
import PropTypes from 'prop-types';
import Box from '@mui/material/Box';
import CssBaseline from '@mui/material/CssBaseline';
import { Drawer } from "../General Components/CustDrawer";
import IconButton from '@mui/material/IconButton';
import * as SolarIconSet from "solar-icon-set";
import SideBarNavHelpers from './SideBarNavHelpers';
import Icon from '../../Foundation/Icon';
import { styled } from '@mui/material';
import { Fragment } from 'react';

const drawerWidth = 248;

const DrawerHeader = styled("div")(({ theme }) => ({
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  padding: theme.spacing(0, 1),
  ...theme.mixins.toolbar,
}));

const Sidebar2 = ({ mobileOpen, handleDrawerClose, handleDrawerTransitionEnd }, props) => {
   const { window } = props;
  const [open, setOpen] = React.useState(true);

  const handleDrawerOpen = () => {
    setOpen(true);
  };

  const handleDrawerSideClose = () => {
    setOpen(false);
  };

  const container =
    window !== undefined ? () => window().document.body : undefined;


  return (
    <Fragment>
      <Box>
      <CssBaseline />
      <Drawer
        container={container}
        variant="temporary"
        open={mobileOpen}
        onTransitionEnd={handleDrawerTransitionEnd}
        onClose={handleDrawerClose}
        handleDrawerToggle={handleDrawerToggle} 
        ModalProps={{
          keepMounted: true, // Better open performance on mobile.
        }}
        sx={{
          '& .MuiDrawer-paper': { boxSizing: 'border-box',   width: drawerWidth},
          display: { mobile: 'block', tablet: 'none' }, // Hide for tablet and larger screens
        }}
      >
       <SideBarNavHelpers />
      </Drawer>
      <Drawer
        variant="permanent"
        open
        sx={{
          '& .MuiDrawer-paper': { boxSizing: 'border-box'},
          display: { mobile: 'none', tablet: 'block' }, // Hide for mobile
        }}
      >
         <DrawerHeader>
            {open && (
              <IconButton
                onClick={handleDrawerSideClose}
                sx={{
                  display: "block",
                  left: 227,
                  top: 85,
                  zIndex: 999,
                  position: "fixed",
                }}
              >
                <Icon
                  color="secondary"
                  sx={{
                    display: "flex",
                    alignItems: "center",
                    borderRadius: "50%",
                    border: "1px dashed #919EAB40",
                  }}
                >
                  <SolarIconSet.AltArrowLeft size={22} iconStyle="Outline" />
                </Icon>
              </IconButton>
            )}

            {!open && (
              <IconButton
                onClick={handleDrawerOpen}
                sx={{
                  display: "block",
                  alignItems: "center",
                  left: 92,
                  top: 70,
                  position: "fixed",
                  zIndex: 999,
                }}
              >
                <Icon
                  color="secondary"
                  sx={{
                    display: "flex",
                    alignItems: "center",
                    borderRadius: "50%",
                    border: "1px dashed #919EAB40",
                  }}
                >
                  <SolarIconSet.AltArrowRight size={22} iconStyle="Outline" />
                </Icon>
              </IconButton>
            )}
          </DrawerHeader>
      <SideBarNavHelpers open={open} />
      </Drawer>
      </Box>
    </Fragment>
  );
}
Sidebar2.propTypes = {
  /**
   * Injected by the documentation to work in an iframe.
   * Remove this when copying and pasting into your project.
   */
  window: PropTypes.func,
};


export default Sidebar2;