export const LineSample = `import React, { useEffect, useRef } from 'react';
import * as echarts from 'echarts';
import { CanvasRenderer } from "echarts/renderers";

echarts.use(CanvasRenderer);

const Line = () => {
  const chartRef = useRef(null);
  const chartInstance = useRef(null);

  useEffect(() => {
    const initChart = () => {
      const chart = echarts.init(chartRef.current);
      chartInstance.current = chart;
    const option = {
      color: ['#00B9ED', '#FFC87C'],
      title: {
        text: "Line",
      },
      tooltip: {
        trigger: 'axis',
        axisPointer: {
          type: 'cross',
          label: {
            backgroundColor: "#6a7985",
          },
        }
      },
      legend: {
        data: ["Test 1", "Test 2"],
        icon: "circle",
        selected: {
          "Test 1": true,
          "Test 2": true,
        },
        orient: "horizontal",
        right: 40,
      },
      grid: {
        left: "3%",
        right: "4%",
        bottom: "3%",
        containLabel: true,
        axisLine: {
          lineStyle: {
            type: "dashed"
          }
        },
    },
      xAxis: {
        type: 'category',
        axisTick: {
          alignWithLabel: true
        },
        axisTick: {
          show: false
        },
        data: [
          'Jan',
          'Feb',
          'Mar',
          'Apr',
          'May',
          'Jun',
          'Jul',
          'Aug',
          'Sep',
          'Oct',
          'Nov',
          'Dec'
        ]
      },
      yAxis: [
        {
          type: 'value',
          min: 0,
          max: 300,
          interval: 50,
          boundaryGap: false,
        }
      ],
      series: [
        {
          name: 'Test 1',
          type: 'line',
          smooth: true,
          symbol: 'none',
          emphasis: {
            focus: 'series'
          },
          data: [100, 92, 30, 84, 60, 90, 200, 90, 75, 100, 80, 70],
        },
        {
          name: 'Test 2',
          type: 'line',
          smooth: true,
          symbol: 'none',
          emphasis: {
            focus: 'series'
          },
          data: [40, 112, 80, 96, 83, 90, 250, 95, 70, 90, 75, 180],
        }
      ]
    };

    chart.setOption(option);
      window.addEventListener("resize", () => {
        chart.resize();
      });
    };

    initChart();

    return () => {
      window.removeEventListener("resize", () => {
        chartInstance.current.dispose();
      });
    };
  }, []);

  return <div id="main" style={{ width: '100%', height: '400px' }} ref={chartRef}></div>;
};

export default Line;`
