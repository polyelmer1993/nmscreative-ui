import React, { useEffect, useRef } from "react";
import * as echarts from "echarts";
import { CanvasRenderer } from "echarts/renderers";

echarts.use(CanvasRenderer);

const GradientStackedAreaChart = () => {
  const chartRef = useRef(null);
  const chartInstance = useRef(null);

  useEffect(() => {
    const initChart = () => {
      
      const chart = echarts.init(chartRef.current);
      chartInstance.current = chart;
      const option = {
        color: ["#00B9ED", "#FFC87C"],
        title: {
          text: "Gradient Stacked Area Chart",
        },
        tooltip: {
          trigger: "axis",
          axisPointer: {
            type: "cross",
            label: {
              backgroundColor: "#6a7985",
            },
          },
        },
        legend: {
          data: ["Test 1", "Test 2"],
          icon: "circle",
          selected: {
            "Test 1": true,
            "Test 2": true,
          },
          orient: "horizontal",
          right: 40,
        },
        grid: {
          left: "3%",
          right: "4%",
          bottom: "3%",
          containLabel: true,
        },
        xAxis: [
          {
            type: "category",
            boundaryGap: false,
            data: [
              "00:00",
              "01:00",
              "02:00",
              "03:00",
              "04:00",
              "05:00",
              "06:00",
              "07:00",
              "08:00",
              "09:00",
              "10:00",
              "11:00",
            ],
          },
        ],
        yAxis: [
          {
            type: "value",
            min: 0,
            max: 300,
            interval: 50,
            boundaryGap: false,
          },
        ],
        series: [
          {
            name: "Test 1",
            type: "line",
            stack: "Total",
            smooth: true,
            symbol: "none",
            lineStyle: {
              width: 0,
            },
            showSymbol: false,
            areaStyle: {
              opacity: 0.8,
              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [
                { offset: 0, color: "rgb(215, 248, 247)" },
                { offset: 1, color: "rgb(102, 188, 239)" },
              ]),
            },
            emphasis: {
              focus: "series",
            },
            data: [70, 92, 51, 84, 60, 90, 100, 90, 75, 100, 80, 130],
          },
          {
            name: "Test 2",
            type: "line",
            stack: "Total",
            smooth: true,
            symbol: "none",
            lineStyle: {
              width: 0,
            },
            showSymbol: false,
            areaStyle: {
              opacity: 0.8,
              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [
                { offset: 0, color: "rgb(255, 200, 124)" },
                { offset: 1, color: "rgb(252, 251, 121)" },
              ]),
            },
            emphasis: {
              focus: "series",
            },
            data: [60, 112, 55, 96, 80, 120, 110, 95, 70, 90, 75, 125],
          },
        ],
      };

      chart.setOption(option);
    };

      const resizeObserver = new ResizeObserver(entries => {
        for (let entry of entries) {
          if (entry.target === chartRef.current) {
            chartInstance.current.resize();
          }
        }
      });
    initChart();

    return () => {
      window.removeEventListener("resize", () => {
        chartInstance.current.dispose();
      });
    };
  }, []);

  return (
    <div
      id="main"
      style={{ width: "100%", height: "400px" }}
      ref={chartRef}
    ></div>
  );
};

export default GradientStackedAreaChart;
