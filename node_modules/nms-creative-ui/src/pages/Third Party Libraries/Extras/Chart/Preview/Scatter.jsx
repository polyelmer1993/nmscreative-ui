import React, { useEffect, useRef } from "react";
import * as echarts from "echarts";
import { CanvasRenderer } from "echarts/renderers";

echarts.use(CanvasRenderer);

const Scatter = () => {
  const chartRef = useRef(null);
  const chartInstance = useRef(null);

  useEffect(() => {
    const initChart = () => {
      const chart = echarts.init(chartRef.current);
      chartInstance.current = chart;
      const option = {
        color: ["#00B9ED", "#FFC87C", "#FF416C"],
        title: {
          text: "Scatter",
        },
        tooltip: {
          trigger: "axis",
          axisPointer: {
            type: "cross",
            label: {
              backgroundColor: "#6a7985",
            },
          },
        },
        legend: {
          data: ["Test 1", "Test 2", "Test 3"],
          icon: "circle",
          selected: {
            "Test 1": true,
            "Test 2": true,
            "Test 3": true,
          },
          orient: "horizontal",
          right: 40,
        },
        grid: {
          left: "3%",
          right: "4%",
          bottom: "3%",
          containLabel: true,
        },
        xAxis: {
          type: "category",
          data: ["0", "3", "6", "9", "12", "15", "18", "21", "24", "27", "30"],
          boundaryGap: false,
        },
        yAxis: [
          {
            type: "value",
            min: 0,
            max: 20,
            interval: 2,
          },
        ],
        series: [
          {
            name: "Test 1",
            symbolSize: 10,
            data: [0, 2, 4, 6, 5, 10, 12, 14, 16, 12, 10, 5, 13],
            type: "scatter",
          },
          {
            name: "Test 2",
            symbolSize: 10,
            data: [2, 4, 8, 5, 7, 8, 10, 9, 6, 5, 3, 7, 13],
            type: "scatter",
          },
          {
            name: "Test 3",
            symbolSize: 10,
            data: [6, 4, 8, 3, 9, 6, 11, 2, 12, 9, 14, 7, 15],
            type: "scatter",
          },
        ],
      };

      chart.setOption(option);
      window.addEventListener("resize", () => {
        chart.resize();
      });
    };

    initChart();

    return () => {
      window.removeEventListener("resize", () => {
        chartInstance.current.dispose();
      });
    };
  }, []);

  return (
    <div
      id="main"
      style={{ width: "100%", height: "400px" }}
      ref={chartRef}
    ></div>
  );
};

export default Scatter;
