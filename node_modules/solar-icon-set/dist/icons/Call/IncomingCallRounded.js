"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
exports.__esModule = true;
var React = __importStar(require("react"));
var IconWrapper_1 = require("../IconWrapper");
var IncomingCallRounded = function (allProps) { var props = allProps.svgProps, iconStyle = allProps.iconStyle, restProps = __rest(allProps, ["svgProps", "iconStyle"]); var styles = { Broken: React.createElement("svg", __assign({ width: "inherit", height: "inherit", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg" }, props),
        React.createElement("path", { d: "M19.53 5.53a.75.75 0 0 0-1.06-1.06l1.06 1.06ZM15 9h-.75c0 .414.336.75.75.75V9Zm.75-3a.75.75 0 0 0-1.5 0h1.5ZM18 9.75a.75.75 0 0 0 0-1.5v1.5Zm.47-5.28-4 4 1.06 1.06 4-4-1.06-1.06ZM15.75 9V6h-1.5v3h1.5Zm-.75.75h3v-1.5h-3v1.5Z", fill: "currentColor" }),
        React.createElement("path", { d: "M4.007 7.933c-.073 1.908.41 5.149 3.66 8.4a14.156 14.156 0 0 0 2.333 1.9M5.538 4.937c1.393-1.393 3.615-1.206 4.5.38l.649 1.162c.585 1.05.35 2.426-.572 3.349 0 0 0 0 0 0s-1.12 1.119.91 3.148c2.027 2.027 3.146.91 3.147.91 0 0 0 0 0 0 .923-.923 2.3-1.158 3.349-.573l1.163.65c1.585.884 1.772 3.106.379 4.5-.837.836-1.863 1.488-2.996 1.53-.814.031-1.87-.039-3.067-.382", stroke: "currentColor", strokeWidth: 1.5, strokeLinecap: "round" })), LineDuotone: React.createElement("svg", __assign({ width: "inherit", height: "inherit", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg" }, props),
        React.createElement("path", { d: "M19.53 5.53a.75.75 0 0 0-1.06-1.06l1.06 1.06ZM15 9h-.75c0 .414.336.75.75.75V9Zm.75-3a.75.75 0 0 0-1.5 0h1.5ZM18 9.75a.75.75 0 0 0 0-1.5v1.5Zm.47-5.28-4 4 1.06 1.06 4-4-1.06-1.06ZM15.75 9V6h-1.5v3h1.5Zm-.75.75h3v-1.5h-3v1.5Z", fill: "currentColor" }),
        React.createElement("path", { opacity: 0.5, d: "m10.038 5.316.649 1.163c.585 1.05.35 2.426-.572 3.349 0 0 0 0 0 0s-1.12 1.119.91 3.148c2.027 2.027 3.146.91 3.147.91 0 0 0 0 0 0 .923-.923 2.3-1.158 3.349-.573l1.163.65c1.585.884 1.772 3.106.379 4.5-.837.836-1.863 1.488-2.996 1.53-1.908.073-5.149-.41-8.4-3.66-3.25-3.251-3.733-6.492-3.66-8.4.043-1.133.694-2.159 1.53-2.996 1.394-1.393 3.616-1.206 4.5.38Z", stroke: "currentColor", strokeWidth: 1.5, strokeLinecap: "round" })), Linear: React.createElement("svg", __assign({ width: "inherit", height: "inherit", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg" }, props),
        React.createElement("path", { d: "M19.53 5.53a.75.75 0 0 0-1.06-1.06l1.06 1.06ZM15 9h-.75c0 .414.336.75.75.75V9Zm.75-3a.75.75 0 0 0-1.5 0h1.5ZM18 9.75a.75.75 0 0 0 0-1.5v1.5Zm.47-5.28-4 4 1.06 1.06 4-4-1.06-1.06ZM15.75 9V6h-1.5v3h1.5Zm-.75.75h3v-1.5h-3v1.5Z", fill: "currentColor" }),
        React.createElement("path", { d: "m10.038 5.316.649 1.163c.585 1.05.35 2.426-.572 3.349 0 0 0 0 0 0s-1.12 1.119.91 3.148c2.027 2.027 3.146.91 3.147.91 0 0 0 0 0 0 .923-.923 2.3-1.158 3.349-.573l1.163.65c1.585.884 1.772 3.106.379 4.5-.837.836-1.863 1.488-2.996 1.53-1.908.073-5.149-.41-8.4-3.66-3.25-3.251-3.733-6.492-3.66-8.4.043-1.133.694-2.159 1.53-2.996 1.394-1.393 3.616-1.206 4.5.38Z", stroke: "currentColor", strokeWidth: 1.5, strokeLinecap: "round" })), Outline: React.createElement("svg", __assign({ width: "inherit", height: "inherit", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg" }, props),
        React.createElement("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M10.693 4.95c-1.17-2.095-4.005-2.223-5.686-.543-.898.899-1.697 2.093-1.75 3.498-.079 2.08.459 5.536 3.88 8.958 3.422 3.421 6.877 3.959 8.958 3.88 1.405-.053 2.6-.852 3.498-1.75 1.68-1.68 1.552-4.516-.544-5.685l-1.163-.65c-1.368-.763-3.095-.438-4.227.68a.63.63 0 0 1-.337.104c-.256.012-.85-.079-1.767-.997-.919-.918-1.01-1.511-.997-1.767a.63.63 0 0 1 .104-.337c1.118-1.132 1.443-2.859.68-4.227l-.65-1.163Zm-4.625.518c1.106-1.106 2.716-.86 3.315.214l.649 1.163c.403.723.266 1.74-.448 2.452-.07.07-.486.516-.524 1.307-.04.81.324 1.792 1.434 2.902 1.11 1.11 2.09 1.474 2.901 1.434.791-.038 1.237-.454 1.307-.524.714-.713 1.73-.851 2.453-.448l1.163.65c1.074.598 1.32 2.208.214 3.314-.775.775-1.63 1.28-2.494 1.312-1.735.066-4.76-.363-7.84-3.442-3.08-3.08-3.508-6.105-3.442-7.84.033-.863.537-1.72 1.312-2.494Z", fill: "currentColor" }),
        React.createElement("path", { d: "M18 9.75a.75.75 0 0 0 0-1.5h-1.19l2.72-2.72a.75.75 0 1 0-1.06-1.06l-2.72 2.72V6a.75.75 0 0 0-1.5 0v3c0 .414.336.75.75.75h3Z", fill: "currentColor" })), Bold: React.createElement("svg", __assign({ width: "inherit", height: "inherit", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg" }, props),
        React.createElement("path", { d: "M19.53 5.53a.75.75 0 0 0-1.06-1.06l1.06 1.06ZM15 9h-.75c0 .414.336.75.75.75V9Zm.75-3a.75.75 0 0 0-1.5 0h1.5ZM18 9.75a.75.75 0 0 0 0-1.5v1.5Zm.47-5.28-4 4 1.06 1.06 4-4-1.06-1.06ZM15.75 9V6h-1.5v3h1.5Zm-.75.75h3v-1.5h-3v1.5Z", fill: "currentColor" }),
        React.createElement("path", { d: "m10.038 5.316.649 1.163c.585 1.05.35 2.426-.572 3.349 0 0-1.12 1.119.91 3.148 2.027 2.027 3.146.91 3.147.91.923-.923 2.3-1.158 3.349-.573l1.163.65c1.585.884 1.772 3.106.379 4.5-.837.836-1.863 1.488-2.996 1.53-1.908.073-5.149-.41-8.4-3.66-3.25-3.251-3.733-6.492-3.66-8.4.043-1.133.694-2.159 1.53-2.996 1.394-1.393 3.616-1.206 4.5.38Z", fill: "currentColor" })), BoldDuotone: React.createElement("svg", __assign({ width: "inherit", height: "inherit", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg" }, props),
        React.createElement("path", { d: "M19.53 5.53a.75.75 0 0 0-1.06-1.06l1.06 1.06ZM15 9h-.75c0 .414.336.75.75.75V9Zm.75-3a.75.75 0 0 0-1.5 0h1.5ZM18 9.75a.75.75 0 0 0 0-1.5v1.5Zm.47-5.28-4 4 1.06 1.06 4-4-1.06-1.06ZM15.75 9V6h-1.5v3h1.5Zm-.75.75h3v-1.5h-3v1.5Z", fill: "currentColor" }),
        React.createElement("path", { opacity: 0.5, d: "m10.038 5.316.649 1.163c.585 1.05.35 2.426-.572 3.349 0 0-1.12 1.119.91 3.148 2.027 2.027 3.146.91 3.147.91.923-.923 2.3-1.158 3.349-.573l1.163.65c1.585.884 1.772 3.106.379 4.5-.837.836-1.863 1.488-2.996 1.53-1.908.073-5.149-.41-8.4-3.66-3.25-3.251-3.733-6.492-3.66-8.4.043-1.133.694-2.159 1.53-2.996 1.394-1.393 3.616-1.206 4.5.38Z", fill: "currentColor" })) }; return React.createElement(IconWrapper_1.IconWrapper, __assign({ icon: styles[iconStyle || 'Linear'] }, restProps)); };
exports["default"] = IncomingCallRounded;
