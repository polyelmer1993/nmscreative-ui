"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
exports.__esModule = true;
var React = __importStar(require("react"));
var IconWrapper_1 = require("../IconWrapper");
var SortFromBottomToTop = function (allProps) { var props = allProps.svgProps, iconStyle = allProps.iconStyle, restProps = __rest(allProps, ["svgProps", "iconStyle"]); var styles = { Broken: React.createElement("svg", __assign({ width: "inherit", height: "inherit", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg" }, props),
        React.createElement("path", { d: "M4 8h9M6 13h7M8 18h5", stroke: "currentColor", strokeWidth: 1.5, strokeLinecap: "round" }),
        React.createElement("path", { d: "M16.25 20a.75.75 0 0 0 1.5 0h-1.5ZM17 4l.6-.45a.75.75 0 0 0-1.35.45H17Zm2.4 4.45a.75.75 0 1 0 1.2-.9l-1.2.9ZM17.75 20V4h-1.5v16h1.5ZM16.4 4.45l3 4 1.2-.9-3-4-1.2.9Z", fill: "currentColor" })), LineDuotone: React.createElement("svg", __assign({ width: "inherit", height: "inherit", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg" }, props),
        React.createElement("path", { d: "M4 8h9", stroke: "currentColor", strokeWidth: 1.5, strokeLinecap: "round" }),
        React.createElement("path", { opacity: 0.7, d: "M6 13h7", stroke: "currentColor", strokeWidth: 1.5, strokeLinecap: "round" }),
        React.createElement("path", { opacity: 0.4, d: "M8 18h5", stroke: "currentColor", strokeWidth: 1.5, strokeLinecap: "round" }),
        React.createElement("path", { d: "M16.25 20a.75.75 0 0 0 1.5 0h-1.5ZM17 4l.6-.45a.75.75 0 0 0-1.35.45H17Zm2.4 4.45a.75.75 0 1 0 1.2-.9l-1.2.9ZM17.75 20V4h-1.5v16h1.5ZM16.4 4.45l3 4 1.2-.9-3-4-1.2.9Z", fill: "currentColor" })), Linear: React.createElement("svg", __assign({ width: "inherit", height: "inherit", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg" }, props),
        React.createElement("path", { d: "M4 8h9M6 13h7M8 18h5", stroke: "currentColor", strokeWidth: 1.5, strokeLinecap: "round" }),
        React.createElement("path", { d: "M16.25 20a.75.75 0 0 0 1.5 0h-1.5ZM17 4l.6-.45a.75.75 0 0 0-1.35.45H17Zm2.4 4.45a.75.75 0 1 0 1.2-.9l-1.2.9ZM17.75 20V4h-1.5v16h1.5ZM16.4 4.45l3 4 1.2-.9-3-4-1.2.9Z", fill: "currentColor" })), Outline: React.createElement("svg", __assign({ width: "inherit", height: "inherit", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg" }, props),
        React.createElement("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M16.763 3.289a.75.75 0 0 1 .837.261l3 4a.75.75 0 1 1-1.2.9l-1.65-2.2V20a.75.75 0 1 1-1.5 0V4a.75.75 0 0 1 .513-.711ZM13 8.75H4v-1.5h9v1.5Zm0 5H6v-1.5h7v1.5Zm0 5H8v-1.5h5v1.5Z", fill: "currentColor" })), Bold: React.createElement("svg", __assign({ width: "inherit", height: "inherit", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg" }, props),
        React.createElement("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M16.763 3.289a.75.75 0 0 1 .837.261l3 4a.75.75 0 1 1-1.2.9l-1.65-2.2V20a.75.75 0 1 1-1.5 0V4a.75.75 0 0 1 .513-.711ZM3.25 8A.75.75 0 0 1 4 7.25h9a.75.75 0 0 1 0 1.5H4A.75.75 0 0 1 3.25 8Zm2 5a.75.75 0 0 1 .75-.75h7a.75.75 0 0 1 0 1.5H6a.75.75 0 0 1-.75-.75Zm2 5a.75.75 0 0 1 .75-.75h5a.75.75 0 0 1 0 1.5H8a.75.75 0 0 1-.75-.75Z", fill: "currentColor" })), BoldDuotone: React.createElement("svg", __assign({ width: "inherit", height: "inherit", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg" }, props),
        React.createElement("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M17 20.75a.75.75 0 0 0 .75-.75V6.25l1.65 2.2a.75.75 0 1 0 1.2-.9l-3-4a.75.75 0 0 0-1.35.45v16c0 .414.336.75.75.75Z", fill: "currentColor" }),
        React.createElement("path", { d: "M3.25 8c0 .414.336.75.75.75h9a.75.75 0 0 0 0-1.5H4a.75.75 0 0 0-.75.75Z", fill: "currentColor" }),
        React.createElement("path", { opacity: 0.7, d: "M5.25 13c0 .414.336.75.75.75h7a.75.75 0 0 0 0-1.5H6a.75.75 0 0 0-.75.75Z", fill: "currentColor" }),
        React.createElement("path", { opacity: 0.4, d: "M7.25 18c0 .414.336.75.75.75h5a.75.75 0 0 0 0-1.5H8a.75.75 0 0 0-.75.75Z", fill: "currentColor" })) }; return React.createElement(IconWrapper_1.IconWrapper, __assign({ icon: styles[iconStyle || 'Linear'] }, restProps)); };
exports["default"] = SortFromBottomToTop;
